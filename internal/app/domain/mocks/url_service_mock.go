// Code generated by MockGen. DO NOT EDIT.
// Source: url_service_iface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIUrlService is a mock of IUrlService interface.
type MockIUrlService struct {
	ctrl     *gomock.Controller
	recorder *MockIUrlServiceMockRecorder
}

// MockIUrlServiceMockRecorder is the mock recorder for MockIUrlService.
type MockIUrlServiceMockRecorder struct {
	mock *MockIUrlService
}

// NewMockIUrlService creates a new mock instance.
func NewMockIUrlService(ctrl *gomock.Controller) *MockIUrlService {
	mock := &MockIUrlService{ctrl: ctrl}
	mock.recorder = &MockIUrlServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUrlService) EXPECT() *MockIUrlServiceMockRecorder {
	return m.recorder
}

// CreateUrl mocks base method.
func (m *MockIUrlService) CreateUrl(arg0 context.Context, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUrl", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateUrl indicates an expected call of CreateUrl.
func (mr *MockIUrlServiceMockRecorder) CreateUrl(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUrl", reflect.TypeOf((*MockIUrlService)(nil).CreateUrl), arg0, arg1)
}

// GetUrl mocks base method.
func (m *MockIUrlService) GetUrl(arg0 context.Context, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrl", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUrl indicates an expected call of GetUrl.
func (mr *MockIUrlServiceMockRecorder) GetUrl(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrl", reflect.TypeOf((*MockIUrlService)(nil).GetUrl), arg0, arg1)
}
