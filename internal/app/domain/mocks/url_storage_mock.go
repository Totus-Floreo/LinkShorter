// Code generated by MockGen. DO NOT EDIT.
// Source: url_storage_iface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	domain "github.com/Totus-Floreo/shortURL/internal/app/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockIUrlStorage is a mock of IUrlStorage interface.
type MockIUrlStorage struct {
	ctrl     *gomock.Controller
	recorder *MockIUrlStorageMockRecorder
}

// MockIUrlStorageMockRecorder is the mock recorder for MockIUrlStorage.
type MockIUrlStorageMockRecorder struct {
	mock *MockIUrlStorage
}

// NewMockIUrlStorage creates a new mock instance.
func NewMockIUrlStorage(ctrl *gomock.Controller) *MockIUrlStorage {
	mock := &MockIUrlStorage{ctrl: ctrl}
	mock.recorder = &MockIUrlStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUrlStorage) EXPECT() *MockIUrlStorageMockRecorder {
	return m.recorder
}

// AddUrl mocks base method.
func (m *MockIUrlStorage) AddUrl(arg0 context.Context, arg1 domain.URLData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddUrl", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddUrl indicates an expected call of AddUrl.
func (mr *MockIUrlStorageMockRecorder) AddUrl(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddUrl", reflect.TypeOf((*MockIUrlStorage)(nil).AddUrl), arg0, arg1)
}

// GetUrl mocks base method.
func (m *MockIUrlStorage) GetUrl(arg0 context.Context, arg1 string) (*domain.URLLong, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrl", arg0, arg1)
	ret0, _ := ret[0].(*domain.URLLong)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUrl indicates an expected call of GetUrl.
func (mr *MockIUrlStorageMockRecorder) GetUrl(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrl", reflect.TypeOf((*MockIUrlStorage)(nil).GetUrl), arg0, arg1)
}
